var animate=function(){var n,a,l=(a=(n=[0,6e-5,24e-5,54e-5,97e-5,.00153,.00221,.00303,.00398,.00506,.00629,.00765,.00916,.01081,.0126,.01455,.01664,.01889,.0213,.02386,.02658,.02946,.0325,.03571,.03908,.04262,.04632,.05019,.05423,.05844,.06283,.06738,.0721,.07699,.08206,.0873,.0927,.09827,.104,.1099,.11597,.12219,.12857,.1351,.14179,.14861,.15559,.16271,.16995,.17734,.18484,.19247,.20021,.20805,.216,.22405,.23219,.24041,.24871,.25708,.26552,.27401,.28256,.29114,.29978,.30844,.31712,.32583,.33455,.34328,.352,.36073,.36945,.37815,.38682,.39548,.40411,.41269,.42126,.42977,.43824,.44666,.45502,.46334,.4716,.4798,.48793,.496,.50399,.51192,.51978,.52757,.53528,.54293,.55049,.55796,.56538,.5727,.57996,.58713,.59421,.60122,.60815,.615,.62175,.62844,.63504,.64157,.648,.65437,.66064,.66684,.67296,.679,.68496,.69084,.69665,.70238,.70803,.7136,.71911,.72452,.72988,.73515,.74036,.74549,.75054,.75554,.76045,.7653,.77007,.77479,.77942,.784,.78851,.79295,.79733,.80163,.80589,.81007,.81419,.81825,.82225,.82619,.83007,.83388,.83765,.84135,.845,.84858,.85211,.85559,.85902,.86239,.8657,.86895,.87217,.87532,.87842,.88149,.88448,.88743,.89034,.89319,.896,.89876,.90147,.90414,.90675,.90933,.91185,.91434,.91678,.91917,.92152,.92383,.92609,.92831,.93049,.93264,.93473,.9368,.93881,.94079,.94273,.94463,.9465,.94832,.95011,.95186,.95357,.95525,.95689,.95849,.96006,.9616,.96309,.96455,.96599,.96738,.96874,.97007,.97136,.97263,.97386,.97506,.97623,.97736,.97847,.97954,.98058,.98159,.98258,.98353,.98445,.98535,.98621,.98705,.98786,.98864,.98939,.99011,.99081,.99147,.99212,.99273,.99332,.99388,.99442,.99493,.99541,.99587,.9963,.99671,.99709,.99745,.99779,.9981,.99838,.99865,.99888,.9991,.99929,.99946,.9996,.99972,.99982,.9999,.99996,.99999,1]).length-1,function(t){var e=Math.round(t*a);return n[e]}),u="animating";return{animateHeight:function(e,t){var a,s,i,r,n=Object.assign({start:0,end:100,fadeIn:!0,duration:200,units:"px"},t),o=l;e.style.height=n.start+n.units,addClass(e,u),e.animation=(a={duration:n.duration,delta:o,step:function(t){e.style.height=n.start+(n.end-n.start)*t+n.units},finish:function(){removeClass(e,u),e.style.removeProperty("height"),"function"==typeof n.finish&&n.finish()},interrupt:function(){removeClass(e,u),e.style.removeProperty("height"),"function"==typeof n.interrupt&&n.interrupt()}},s=new Date,i=!1,r=function(){var t=new Date-s,e=t/a.duration;1<e&&(e=1);var n=a.delta(e);a.step(n),i&&a.interrupt?a.interrupt():e<1?window.requestAnimationFrame(r):a.finish&&a.finish()},window.requestAnimationFrame(r),{stop:function(){i=!0}})},getNaturalHeight:function(t){var e,n;return n=(e=function(t,e){var n=document.createElement(e);for(t.appendChild(n);t.firstChild&&t.firstChild!==n;)n.appendChild(t.firstChild);return n}(t,"div")).offsetHeight,function(t){for(var e=t.parentNode;t.firstChild;)e.insertBefore(t.firstChild,t);e.removeChild(t)}(e),n}}}(),byu_main=function(){var e=document;return HTMLElement.prototype.hasClass=function(t){return this.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))},HTMLElement.prototype.addClass=function(t){for(var e=t.split(","),n=0;n<e.length;n++)-1==(" "+this.className+" ").indexOf(" "+e[n]+" ")&&(this.className+=" "+e[n]);return this},HTMLElement.prototype.removeClass=function(t){if(this.hasClass(t)){var e=new RegExp("(\\s|^)"+t+"(\\s|$)");this.className=this.className.replace(e," ")}return this},{executeOnLoad:function(t){"loading"!=e.readyState?t():e.addEventListener?e.addEventListener("DOMContentLoaded",t):e.attachEvent("onreadystatechange",function(){"complete"==e.readyState&&t()})}}}(),byu_table=function(){"use strict";var a=document;function s(t){var e=t.offsetWidth,n=t.getElementsByTagName("table")[0],a=n.offsetWidth,s="table-wide",i="start-visible",r="end-visible";e<a?(t.hasClass(s)||t.addClass(s),0==n.scrollLeft?t.hasClass(i)||t.addClass(i):t.removeClass(i),a-n.scrollLeft==e?t.hasClass(r)||t.addClass(r):t.removeClass(r)):t.removeClass(s)}byu_main.executeOnLoad(function(){for(var t=a.getElementsByClassName("table-container"),e=0;e<t.length;e++){var n=t[e];s(n)}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGUuanMiLCJtYWluLmpzIiwiZm91bmRhdGlvbi90YWJsZS90YWJsZS5qcyJdLCJuYW1lcyI6WyJhbmltYXRlIiwieUNvb3JkaW5hdGVzIiwibGVuIiwiZWFzZUZ1bmN0aW9uIiwibGVuZ3RoIiwicHJvZ3Jlc3MiLCJwIiwiTWF0aCIsInJvdW5kIiwiYW5pbWF0aW5nQ2xhc3MiLCJhbmltYXRlSGVpZ2h0IiwiZWwiLCJzZXR0aW5nc09iaiIsIm9wdHMiLCJzdGFydCIsImludGVycnVwdCIsInJlbmRlciIsInMiLCJPYmplY3QiLCJhc3NpZ24iLCJlbmQiLCJmYWRlSW4iLCJkdXJhdGlvbiIsInVuaXRzIiwiZWFzZSIsInN0eWxlIiwiaGVpZ2h0IiwiYWRkQ2xhc3MiLCJhbmltYXRpb24iLCJkZWx0YSIsInN0ZXAiLCJmaW5pc2giLCJyZW1vdmVDbGFzcyIsInJlbW92ZVByb3BlcnR5IiwiRGF0ZSIsInRpbWVQYXNzZWQiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzdG9wIiwiZ2V0TmF0dXJhbEhlaWdodCIsIndyYXBwZXIiLCJ3cmFwIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJmaXJzdENoaWxkIiwid3JhcElubmVyIiwib2Zmc2V0SGVpZ2h0IiwicGFyZW50IiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSIsInJlbW92ZUNoaWxkIiwidW53cmFwIiwiYnl1X21haW4iLCJkb2MiLCJIVE1MRWxlbWVudCIsInByb3RvdHlwZSIsImhhc0NsYXNzIiwibmFtZSIsInRoaXMiLCJjbGFzc05hbWUiLCJtYXRjaCIsIlJlZ0V4cCIsIm5ld19jbGFzcyIsIm5jIiwic3BsaXQiLCJpIiwiaW5kZXhPZiIsInJlZyIsInJlcGxhY2UiLCJleGVjdXRlT25Mb2FkIiwiZnVuY3Rpb25OYW1lIiwicmVhZHlTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsImJ5dV90YWJsZSIsInVwZGF0ZVRhYmxlIiwiY29udGFpbmVyIiwiY193aWR0aCIsIm9mZnNldFdpZHRoIiwidGFibGUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInRfd2lkdGgiLCJ0YWJsZV93aWRlX2NsYXNzIiwic3RhcnRfdmlzaWJsZV9jbGFzcyIsImVuZF92aXNpYmxlX2NsYXNzIiwic2Nyb2xsTGVmdCIsImNvbnRhaW5lcnMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIl0sIm1hcHBpbmdzIjoiQUFHQSxJQUFBQSxRQUFBLFdBRUEsSUE0SEFDLEVBQ0FDLEVBN0hBQyxHQTZIQUQsR0FEQUQsRUFBQSxDQUFBLEVBQUEsS0FBQSxNQUFBLE1BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxNQUFBLE9BQUEsT0FBQSxPQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxNQUFBLE9BQUEsT0FBQSxNQUFBLE1BQUEsT0FBQSxLQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLEtBQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsS0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE1BQUEsTUFBQSxPQUFBLEtBQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsS0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLEtBQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxLQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxNQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsS0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsS0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxLQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsTUFBQSxPQUFBLE9BQUEsSUFDQUcsT0FBQSxFQUdBLFNBQUFDLEdBQ0EsSUFBQUMsRUFBQUMsS0FBQUMsTUFBQUgsRUFBQUgsR0FDQSxPQUFBRCxFQUFBSyxLQWpJQUcsRUFBQSxZQStMQSxNQUFBLENBQ0FDLGNBdExBLFNBQUFDLEVBQUFDLEdBR0EsSUErQ0FDLEVBRUFDLEVBQ0FDLEVBSUFDLEVBdERBQyxFQUFBQyxPQUFBQyxPQUFBLENBQ0FMLE1BQUEsRUFDQU0sSUFBQSxJQUNBQyxRQUFBLEVBQ0FDLFNBQUEsSUFDQUMsTUFBQSxNQUNBWCxHQUVBWSxFQUFBckIsRUFFQVEsRUFBQWMsTUFBQUMsT0FBQVQsRUFB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SSxHQUdBTCxFQUFBcEIsU0FBQTBCLElBQ0FOLEVBQUFsRCxTQUFBd0QsR0FJQSxHQUFBSCxFQUFBTSxXQUNBVCxFQUFBcEIsU0FBQTJCLElBQ0FQLEVBQUFsRCxTQUFBeUQsR0FHQVAsRUFBQTdDLFlBQUFvRCxHQUlBRixFQUFBRixFQUFBTSxZQUFBUixFQUNBRCxFQUFBcEIsU0FBQTRCLElBQ0FSLEVBQUFsRCxTQUFBMEQsR0FHQVIsRUFBQTdDLFlBQUFxRCxJQU1BUixFQUFBN0MsWUFBQW1ELEdBNURBOUIsU0FBQWlCLGNBU0EsV0FHQSxJQUZBLElBQUFpQixFQUFBakMsRUFBQWtDLHVCQUFBLG1CQUVBdEIsRUFBQSxFQUFBQSxFQUFBcUIsRUFBQW5GLE9BQUE4RCxJQUFBLENBQ0EsSUFBQVcsRUFBQVUsRUFBQXJCLEdBQ0FVLEVBQUFDLE1BdEJBIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKiovXG4vKiEgQW5pbWF0ZSAqL1xuXG52YXIgYW5pbWF0ZSA9IChmdW5jdGlvbigpIHtcblxuICAgIHZhciBlYXNlRnVuY3Rpb24gPSBjdWJpY0JlemllckRlZmluZWQoKTtcbiAgICB2YXIgYW5pbWF0aW5nQ2xhc3MgPSAnYW5pbWF0aW5nJztcblxuICAgIC8vIEFuaW1hdGlvblxuXG4gICAgLypcbiAgICAgKiAgICAgIEZ1bmM6IGFuaW1hdGVIZWlnaHRcbiAgICAgKiAgICAgIERlc2M6IEFuaW1hdGUgdGhlIGhlaWdodCBvZiBhbiBpdGVtXG4gICAgICogICAgICBBcmdzOiBAZWwgLSBIVE1MIEVsZW1lbnQgLSBUaGUgSFRNTCBlbGVtZW50IHRvIGFuaW1hdGVcbiAgICAgKiAgICAgICAgICAgICAgIEBzZXR0aW5nc09iaiAtIE9iamVjdCAtIENvbnRhaW5zIHByb3BlcnRpZXMgdG8gb3ZlcnJpZGUgZGVmYXVsdCBzZXR0aW5nc1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGFuaW1hdGVIZWlnaHQoZWwsIHNldHRpbmdzT2JqKSB7XG5cbiAgICAgICAgLy8gU2V0IGRlZmF1bHRzIGFuZCBvdmVyd3JpdGUgd2l0aCBwYXNzZWQgb2JqZWN0IChzZXR0aW5nc09iailcbiAgICAgICAgdmFyIHMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgIHN0YXJ0OiAwLFxuICAgICAgICAgICAgZW5kOiAxMDAsXG4gICAgICAgICAgICBmYWRlSW46IHRydWUsXG4gICAgICAgICAgICBkdXJhdGlvbjogMjAwLFxuICAgICAgICAgICAgdW5pdHM6IFwicHhcIixcbiAgICAgICAgfSwgc2V0dGluZ3NPYmopO1xuXG4gICAgICAgIHZhciBlYXNlID0gZWFzZUZ1bmN0aW9uO1xuXG4gICAgICAgIGVsLnN0eWxlLmhlaWdodCA9IHMuc3RhcnQgKyBzLnVuaXRzO1xuICAgICAgICBhZGRDbGFzcyhlbCwgYW5pbWF0aW5nQ2xhc3MpO1xuXG4gICAgICAgIC8vIEFuaW1hdGUgaGVpZ2h0IGF0IGlucHV0IHJhdGVcbiAgICAgICAgZWwuYW5pbWF0aW9uID0gYW5pbWF0ZSh7XG4gICAgICAgICAgICBkdXJhdGlvbjogcy5kdXJhdGlvbixcbiAgICAgICAgICAgIGRlbHRhOiBlYXNlLFxuICAgICAgICAgICAgc3RlcDogZnVuY3Rpb24oZGVsdGEpIHtcbiAgICAgICAgICAgICAgICBlbC5zdHlsZS5oZWlnaHQgPSBzLnN0YXJ0ICsgKChzLmVuZCAtIHMuc3RhcnQpICogZGVsdGEpICsgcy51bml0cztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmaW5pc2g6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJlbW92ZUNsYXNzKGVsLCBhbmltYXRpbmdDbGFzcyk7XG4gICAgICAgICAgICAgICAgZWwuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJoZWlnaHRcIik7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBzLmZpbmlzaCA9PSBcImZ1bmN0aW9uXCIpIHsgcy5maW5pc2goKTsgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGludGVycnVwdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlQ2xhc3MoZWwsIGFuaW1hdGluZ0NsYXNzKTtcbiAgICAgICAgICAgICAgICBlbC5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcImhlaWdodFwiKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHMuaW50ZXJydXB0ID09IFwiZnVuY3Rpb25cIikgeyBzLmludGVycnVwdCgpOyB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgfSAvLyBhbmltYXRlSGVpZ2h0XG5cblxuICAgIC8qXG4gICAgICogICAgICBGdW5jOiBhbmltYXRlXG4gICAgICogICAgICBEZXNjOiBBbmltYXRlIGZ1bmN0aW9uXG4gICAgICogIFNyYzogIGh0dHA6Ly9qYXZhc2NyaXB0LmluZm8vdHV0b3JpYWwvYW5pbWF0aW9uIChtYWluIGFuaW1hdGlvbiBmdW5jdGlvbnMpXG4gICAgICogICAgICAgICAgICAgICBodHRwOi8vY3JlYXRpdmVqcy5jb20vcmVzb3VyY2VzL3JlcXVlc3RhbmltYXRpb25mcmFtZS8gKHJlcXVlc3RBbmltYXRpb25GcmFtZSlcbiAgICAgKiAgICAgIEFyZ3M6IEBvcHRzIC0gT2JqZWN0IC0gVGhlIG9wdGlvbnMgb2JqZWN0XG4gICAgICogICAgICAgICAgICAgICBjb250YWluczogQGR1cmF0aW9uIC0gTnVtYmVyIC0gTWlsbGlzZWNvbmRzIGZvciB0b3RhbCBhbmltYXRpb25cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBkZWx0YSAtIEZ1bmN0aW9uIC0gRWFzaW5nIGZ1bmN0aW9uXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAc3RlcCAtIEZ1bmN0aW9uIC0gUmVzdWx0IGZ1bmN0aW9uICh3aGF0IHNob3VsZCBoYXBwZW4gb24gc2NyZWVuIGVhY2ggZnJhbWUpXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZmluaXNoIC0gRnVuY3Rpb24gLSBvcHRpb25hbC0gRW5kIGZ1bmN0aW9uICh3aGF0IGhhcHBlbnMgd2hlbiBhbmltYXRpb24gZmluaXNoZXMpXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW50ZXJydXB0IC0gRnVuY3Rpb24gLSBvcHRpb25hbC0gRW5kIGZ1bmN0aW9uICh3aGF0IGhhcHBlbnMgaWYgYW5pbWF0aW9uIGlzIGludGVycnVwdGVkKVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGFuaW1hdGUob3B0cykge1xuXG4gICAgICAgIHZhciBzdGFydCA9IG5ldyBEYXRlKCk7IC8vIEdldCB0aGUgc3RhcnQgdGltZVxuICAgICAgICB2YXIgaW50ZXJydXB0ID0gZmFsc2U7IC8vIElmIHRoaXMgaXMgdHJ1ZSwgYW5pbWF0aW9uIHdpbGwgc3RvcFxuICAgICAgICB2YXIgc3RvcCA9IGZ1bmN0aW9uKCkgeyBpbnRlcnJ1cHQgPSB0cnVlOyB9OyAvLyBTdG9wcyB0aGlzIGFuaW1hdGlvblxuXG4gICAgICAgIC8vIFRoZSByZW5kZXIgZnVuY3Rpb25cbiAgICAgICAgdmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHRpbWVQYXNzZWQgPSBuZXcgRGF0ZSgpIC0gc3RhcnQ7IC8vIFRoZSBhbW91bnQgb2YgdGltZSBlbGFwc2VkIHNpbmNlIHN0YXJ0XG4gICAgICAgICAgICB2YXIgcHJvZ3Jlc3MgPSB0aW1lUGFzc2VkIC8gb3B0cy5kdXJhdGlvbjsgLy8gUGVyY2VudGFnZSBvZiB0aW1lIHBhc3NlZCBpbiBmdWxsIGV4cGVjdGVkIGR1cmF0aW9uXG5cbiAgICAgICAgICAgIGlmIChwcm9ncmVzcyA+IDEpIHsgcHJvZ3Jlc3MgPSAxOyB9IC8vIENhcCBwZXJjZW50YWdlIGF0IDEgKDEwMCUpXG5cbiAgICAgICAgICAgIHZhciBkZWx0YSA9IG9wdHMuZGVsdGEocHJvZ3Jlc3MpOyAvLyBBcHBseSBlYXNpbmcgZnVuY3Rpb25cbiAgICAgICAgICAgIG9wdHMuc3RlcChkZWx0YSk7IC8vIEFwcGx5IHRoZSBzdGVwIGZ1Y3Rpb24gZnJvbSB0aGUgb3B0aW9ucyBvYmplY3QgKHJlbmRlcnMgYSBjaGFuZ2Ugb24gc2NyZWVuKVxuXG4gICAgICAgICAgICAvLyBJbnRlcnJ1cHQsIGNvbnRpbnVlLCBvciBmaW5pc2ggZGVwZW5kaW5nIG9uIHByb2dyZXNzXG4gICAgICAgICAgICBpZiAoaW50ZXJydXB0ICYmIG9wdHMuaW50ZXJydXB0KSB7XG4gICAgICAgICAgICAgICAgb3B0cy5pbnRlcnJ1cHQoKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocHJvZ3Jlc3MgPCAxKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChvcHRzLmZpbmlzaCkge1xuICAgICAgICAgICAgICAgIG9wdHMuZmluaXNoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gU3RhcnQgdGhlIGFuaW1hdGlvblxuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG5cbiAgICAgICAgcmV0dXJuIHsgc3RvcDogc3RvcCB9O1xuXG4gICAgfSAvLyBhbmltYXRlXG5cblxuICAgIC8qXG4gICAgICogICAgICBGdW5jOiBlYXNlSW5PdXRcbiAgICAgKiAgICAgIERlc2M6IEVhc2luZyBmdW5jdGlvblxuICAgICAqICAgICAgQXJnczogQHBvd2VyIC0gUG9zaXRpdmUgSW50ZWdlciAtIE1hdGggcG93ZXIgdGhhdCBzcGVjaWZpZXMgZWFzaW5nIGN1cnZlIChkZWZhdWx0IDMpXG4gICAgICovXG4gICAgZnVuY3Rpb24gZWFzZUluT3V0KHBvd2VyKSB7XG4gICAgICAgIHBvd2VyID0gcG93ZXIgPyBwb3dlciA6IDM7XG4gICAgICAgIHZhciBkZWx0YSA9IGZ1bmN0aW9uKHByb2dyZXNzKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5wb3cocHJvZ3Jlc3MsIHBvd2VyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihwcm9ncmVzcykge1xuICAgICAgICAgICAgaWYgKHByb2dyZXNzIDwgLjUpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlbHRhKDIgKiBwcm9ncmVzcykgLyAyXG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcmV0dXJuICgyIC0gZGVsdGEoMiAqICgxIC0gcHJvZ3Jlc3MpKSkgLyAyXG4gICAgICAgIH1cbiAgICB9IC8vIGVhc2VJbk91dFxuXG5cbiAgICAvKlxuICAgICogICAgICBGdW5jOiBjdWJpY0JlemllckRlZmluZWRcbiAgICAqICAgICAgRGVzYzogRWFzaW5nIGZ1bmN0aW9uIGJhc2VkIG9uIENTUyBlYXNpbmc6IGN1YmljLWJlemllcigwLjMsIDAsIDAuMywgMSkuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB5Q29vcmRpbmF0ZXMgZ2VuZXJhdGVkIGJ5IHJ1bm5pbmcgYSBjdWJpYyBiZXppZXIgZnVuY3Rpb24gKHJldHVybmluZyBYIGFuZCBZIGNvb3JkaW5hdGVzIGJhc2VkIG9uIHRpbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBvdXRwdXR0aW5nIHRoZSBZIHZhbHVlcyBhc3NvY2lhdGVkIHdpdGggdGhlIFggdmFsdWVzIHRoYXQgZmFsbCBjbG9zZXN0IHRvIGVhY2ggaHVuZHJlZHRoICguMDEsIC4wMiwgLi4uKS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgYWxsb3dzIGEgcXVpY2sgbG9va3VwIGJhc2VkIG9uIGFuaW1hdGlvbiBwcm9ncmVzcy4gUHJvZ3Jlc3MgKCUpICogYXJyYXkgbGVuZ3RoIGlzIHRoZSBpbmRleCBvZiB0aGUgWSB2YWx1ZS5cbiAgICAqICAgICAgQXJnczogbm9uZVxuICAgICovXG4gICAgZnVuY3Rpb24gY3ViaWNCZXppZXJEZWZpbmVkKCkge1xuICAgICAgICB2YXIgeUNvb3JkaW5hdGVzID0gWzAsIDAuMDAwMDYsIDAuMDAwMjQsIDAuMDAwNTQsIDAuMDAwOTcsIDAuMDAxNTMsIDAuMDAyMjEsIDAuMDAzMDMsIDAuMDAzOTgsIDAuMDA1MDYsIDAuMDA2MjksIDAuMDA3NjUsIDAuMDA5MTYsIDAuMDEwODEsIDAuMDEyNiwgMC4wMTQ1NSwgMC4wMTY2NCwgMC4wMTg4OSwgMC4wMjEzLCAwLjAyMzg2LCAwLjAyNjU4LCAwLjAyOTQ2LCAwLjAzMjUsIDAuMDM1NzEsIDAuMDM5MDgsIDAuMDQyNjIsIDAuMDQ2MzIsIDAuMDUwMTksIDAuMDU0MjMsIDAuMDU4NDQsIDAuMDYyODMsIDAuMDY3MzgsIDAuMDcyMSwgMC4wNzY5OSwgMC4wODIwNiwgMC4wODczLCAwLjA5MjcsIDAuMDk4MjcsIDAuMTA0LCAwLjEwOTksIDAuMTE1OTcsIDAuMTIyMTksIDAuMTI4NTcsIDAuMTM1MSwgMC4xNDE3OSwgMC4xNDg2MSwgMC4xNTU1OSwgMC4xNjI3MSwgMC4xNjk5NSwgMC4xNzczNCwgMC4xODQ4NCwgMC4xOTI0NywgMC4yMDAyMSwgMC4yMDgwNSwgMC4yMTYsIDAuMjI0MDUsIDAuMjMyMTksIDAuMjQwNDEsIDAuMjQ4NzEsIDAuMjU3MDgsIDAuMjY1NTIsIDAuMjc0MDEsIDAuMjgyNTYsIDAuMjkxMTQsIDAuMjk5NzgsIDAuMzA4NDQsIDAuMzE3MTIsIDAuMzI1ODMsIDAuMzM0NTUsIDAuMzQzMjgsIDAuMzUyLCAwLjM2MDczLCAwLjM2OTQ1LCAwLjM3ODE1LCAwLjM4NjgyLCAwLjM5NTQ4LCAwLjQwNDExLCAwLjQxMjY5LCAwLjQyMTI2LCAwLjQyOTc3LCAwLjQzODI0LCAwLjQ0NjY2LCAwLjQ1NTAyLCAwLjQ2MzM0LCAwLjQ3MTYsIDAuNDc5OCwgMC40ODc5MywgMC40OTYsIDAuNTAzOTksIDAuNTExOTIsIDAuNTE5NzgsIDAuNTI3NTcsIDAuNTM1MjgsIDAuNTQyOTMsIDAuNTUwNDksIDAuNTU3OTYsIDAuNTY1MzgsIDAuNTcyNywgMC41Nzk5NiwgMC41ODcxMywgMC41OTQyMSwgMC42MDEyMiwgMC42MDgxNSwgMC42MTUsIDAuNjIxNzUsIDAuNjI4NDQsIDAuNjM1MDQsIDAuNjQxNTcsIDAuNjQ4LCAwLjY1NDM3LCAwLjY2MDY0LCAwLjY2Njg0LCAwLjY3Mjk2LCAwLjY3OSwgMC42ODQ5NiwgMC42OTA4NCwgMC42OTY2NSwgMC43MDIzOCwgMC43MDgwMywgMC43MTM2LCAwLjcxOTExLCAwLjcyNDUyLCAwLjcyOTg4LCAwLjczNTE1LCAwLjc0MDM2LCAwLjc0NTQ5LCAwLjc1MDU0LCAwLjc1NTU0LCAwLjc2MDQ1LCAwLjc2NTMsIDAuNzcwMDcsIDAuNzc0NzksIDAuNzc5NDIsIDAuNzg0LCAwLjc4ODUxLCAwLjc5Mjk1LCAwLjc5NzMzLCAwLjgwMTYzLCAwLjgwNTg5LCAwLjgxMDA3LCAwLjgxNDE5LCAwLjgxODI1LCAwLjgyMjI1LCAwLjgyNjE5LCAwLjgzMDA3LCAwLjgzMzg4LCAwLjgzNzY1LCAwLjg0MTM1LCAwLjg0NSwgMC44NDg1OCwgMC44NTIxMSwgMC44NTU1OSwgMC44NTkwMiwgMC44NjIzOSwgMC44NjU3LCAwLjg2ODk1LCAwLjg3MjE3LCAwLjg3NTMyLCAwLjg3ODQyLCAwLjg4MTQ5LCAwLjg4NDQ4LCAwLjg4NzQzLCAwLjg5MDM0LCAwLjg5MzE5LCAwLjg5NiwgMC44OTg3NiwgMC45MDE0NywgMC45MDQxNCwgMC45MDY3NSwgMC45MDkzMywgMC45MTE4NSwgMC45MTQzNCwgMC45MTY3OCwgMC45MTkxNywgMC45MjE1MiwgMC45MjM4MywgMC45MjYwOSwgMC45MjgzMSwgMC45MzA0OSwgMC45MzI2NCwgMC45MzQ3MywgMC45MzY4LCAwLjkzODgxLCAwLjk0MDc5LCAwLjk0MjczLCAwLjk0NDYzLCAwLjk0NjUsIDAuOTQ4MzIsIDAuOTUwMTEsIDAuOTUxODYsIDAuOTUzNTcsIDAuOTU1MjUsIDAuOTU2ODksIDAuOTU4NDksIDAuOTYwMDYsIDAuOTYxNiwgMC45NjMwOSwgMC45NjQ1NSwgMC45NjU5OSwgMC45NjczOCwgMC45Njg3NCwgMC45NzAwNywgMC45NzEzNiwgMC45NzI2MywgMC45NzM4NiwgMC45NzUwNiwgMC45NzYyMywgMC45NzczNiwgMC45Nzg0NywgMC45Nzk1NCwgMC45ODA1OCwgMC45ODE1OSwgMC45ODI1OCwgMC45ODM1MywgMC45ODQ0NSwgMC45ODUzNSwgMC45ODYyMSwgMC45ODcwNSwgMC45ODc4NiwgMC45ODg2NCwgMC45ODkzOSwgMC45OTAxMSwgMC45OTA4MSwgMC45OTE0NywgMC45OTIxMiwgMC45OTI3MywgMC45OTMzMiwgMC45OTM4OCwgMC45OTQ0MiwgMC45OTQ5MywgMC45OTU0MSwgMC45OTU4NywgMC45OTYzLCAwLjk5NjcxLCAwLjk5NzA5LCAwLjk5NzQ1LCAwLjk5Nzc5LCAwLjk5ODEsIDAuOTk4MzgsIDAuOTk4NjUsIDAuOTk4ODgsIDAuOTk5MSwgMC45OTkyOSwgMC45OTk0NiwgMC45OTk2LCAwLjk5OTcyLCAwLjk5OTgyLCAwLjk5OTksIDAuOTk5OTYsIDAuOTk5OTksIDFdO1xuICAgICAgICB2YXIgbGVuID0geUNvb3JkaW5hdGVzLmxlbmd0aCAtIDE7XG5cbiAgICAgICAgLy8gUmV0dXJuIHRoZSBlYXNlaW5nIGZ1bmN0aW9uLCB3aGljaCByZXR1cm5zIGFuIGVhc2VkIHZhbHVlICgw4oCTMSkgYmFzZWQgb24gdGhlIHByb2dyZXNzICgw4oCTMSwgaS5lIDAlLTEwMCUpXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihwcm9ncmVzcykge1xuICAgICAgICAgICAgdmFyIHAgPSBNYXRoLnJvdW5kKHByb2dyZXNzICogbGVuKTtcbiAgICAgICAgICAgIHJldHVybiB5Q29vcmRpbmF0ZXNbcF07XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIC8qXG4gICAgICogICAgICBGdW5jOiBnZXROYXR1cmFsSGVpZ2h0XG4gICAgICogICAgICBEZXNjOiBHZXQgdGhlIGhlaWdodCBvZiBhbiBlbGVtZW50IG9uIHRoZSBwYWdlIChiZWZvcmUgdmlzaWJseSByZW5kZXJpbmcgaXQgb24gdGhlIHBhZ2UpXG4gICAgICogICAgICBBcmdzOiBAZWwgLSBIVE1MIEVsZW1lbnQgLSBUaGUgZWxlbWVudCB0byBtZWFzdXJlXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0TmF0dXJhbEhlaWdodChlbCkge1xuICAgICAgICB2YXIgd3JhcHBlciwgdGVzdERpdiwgaGVpZ2h0O1xuXG4gICAgICAgIHdyYXBwZXIgPSB3cmFwSW5uZXIoZWwsIFwiZGl2XCIpO1xuICAgICAgICBoZWlnaHQgPSB3cmFwcGVyLm9mZnNldEhlaWdodDtcblxuICAgICAgICB1bndyYXAod3JhcHBlcik7XG5cbiAgICAgICAgcmV0dXJuIGhlaWdodDtcbiAgICB9XG5cblxuXG5cblxuICAgIC8qXG4gICAgICogICAgICBGdW5jOiB3cmFwSW5uZXJcbiAgICAgKiAgICAgIERlc2M6IFdyYXAgdGhlIGNvbnRlbnRzIG9mIGFuIGVsZW1lbnQgaW4gYSBuZXcgSFRNTCBlbGVtZW50XG4gICAgICogICAgICBBcmdzOiBAZWwgLSBIVE1MRWxlbWVudCAtIFRoZSBlbGVtZW50IHdob3NlIGNvbnRlbnRzIHNob3VsZCBiZSB3cmFwcGVkXG4gICAgICogICAgICAgICAgICAgICBAd3JhcHBlciAtIFN0cmluZyAtIFRoZSB0eXBlIG9mIEhUTUwgZWxlbWVudCB0aGF0IHNob3VsZCB3cmFwIHRoZSBjb250ZW50c1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHdyYXBJbm5lcihlbCwgd3JhcHBlcikge1xuICAgICAgICB2YXIgd3JhcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQod3JhcHBlcik7XG5cbiAgICAgICAgLy8gQXBwZW5kIGEgd3JhcHBlciBub2RlXG4gICAgICAgIGVsLmFwcGVuZENoaWxkKHdyYXApO1xuXG4gICAgICAgIC8vIE1vdmUgYWxsIGNoaWxkcmVuIGludG8gdGhlIHdyYXBwZXIgZWxlbWVudFxuICAgICAgICB3aGlsZSAoZWwuZmlyc3RDaGlsZCAmJiBlbC5maXJzdENoaWxkICE9PSB3cmFwKSB3cmFwLmFwcGVuZENoaWxkKGVsLmZpcnN0Q2hpbGQpO1xuXG4gICAgICAgIHJldHVybiB3cmFwO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogICAgICBGdW5jOiB1bndyYXBcbiAgICAgKiAgICAgIERlc2M6IFVud3JhcCB0aGUgcGFyZW50IGVsZW1lbnQgb2YgdGhlIHNwZWNpZmllZCBET00gZWxlbWVudFxuICAgICAqICBTcmM6ICBodHRwczovL3BsYWluanMuY29tL2phdmFzY3JpcHQvbWFuaXB1bGF0aW9uL3Vud3JhcC1hLWRvbS1lbGVtZW50LTM1L1xuICAgICAqICAgICAgQXJnczogQGVsIC0gSFRNTEVsZW1lbnQgLSBUaGUgZWxlbWVudCB0byBkZXN0cm95XG4gICAgICovXG4gICAgZnVuY3Rpb24gdW53cmFwKGVsKSB7XG4gICAgICAgIC8vIGdldCB0aGUgZWxlbWVudCdzIHBhcmVudCBub2RlXG4gICAgICAgIHZhciBwYXJlbnQgPSBlbC5wYXJlbnROb2RlO1xuXG4gICAgICAgIC8vIG1vdmUgYWxsIGNoaWxkcmVuIG91dCBvZiB0aGUgd3JhcHBlciBlbGVtZW50XG4gICAgICAgIHdoaWxlIChlbC5maXJzdENoaWxkKSBwYXJlbnQuaW5zZXJ0QmVmb3JlKGVsLmZpcnN0Q2hpbGQsIGVsKTtcblxuICAgICAgICAvLyByZW1vdmUgdGhlIGVtcHR5IGVsZW1lbnRcbiAgICAgICAgcGFyZW50LnJlbW92ZUNoaWxkKGVsKTtcbiAgICB9XG5cblxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgYW5pbWF0ZUhlaWdodDogYW5pbWF0ZUhlaWdodCxcbiAgICAgICAgZ2V0TmF0dXJhbEhlaWdodDogZ2V0TmF0dXJhbEhlaWdodFxuICAgIH1cblxuXG59KSgpOyIsIi8qXG4gKiBNb2R1bGU6IEJZVSBNYWluXG4gKiBEZXNjOiAgIEZ1bmN0aW9ucyB0aGF0IGFwcGx5IHRvIGFsbCBCWVUgcGFnZXMsIGNvbXBvbmVudHMsIG9yIHNjcmlwdHNcbiAqL1xuXG52YXIgYnl1X21haW4gPSAoZnVuY3Rpb24oKXtcblxuXHR2YXIgZG9jID0gZG9jdW1lbnQ7XG5cblx0Lypcblx0ICogSFRNTCBQcm90b3R5cGUgZnVuY3Rpb24gYXNzaWdubWVudHNcblx0ICogRGVzYzogTWFrZSBpdCBlYXN5IHRvIGFkZCwgdGVzdCwgYW5kIHJlbW92ZSBIVE1MIGNsYXNzZXMgdmlhIGNvbXBhdGlibGUsIHBsYWluIEpTXG5cdCAqIFNyYzogIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvamF2YXNjcmlwdC9hZGRjbGFzcy1mdW5jdGlvbi8jY29tbWVudC0xNjE4NDA1XG5cdCAqL1xuXHRcblx0Ly8gSGFzQ2xhc3Ncblx0SFRNTEVsZW1lbnQucHJvdG90eXBlLmhhc0NsYXNzID0gZnVuY3Rpb24obmFtZSkge1xuXHQgICAgcmV0dXJuIHRoaXMuY2xhc3NOYW1lLm1hdGNoKG5ldyBSZWdFeHAoJyhcXFxcc3xeKScrbmFtZSsnKFxcXFxzfCQpJykpO1xuXHR9O1xuXG5cdC8vIEFkZENsYXNzXG5cdEhUTUxFbGVtZW50LnByb3RvdHlwZS5hZGRDbGFzcyA9IGZ1bmN0aW9uKG5ld19jbGFzcykgeyAgIFxuXHQgICAgdmFyIG5jID0gbmV3X2NsYXNzLnNwbGl0KFwiLFwiKTtcblxuXHQgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuYy5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgIGlmICgoXCIgXCIgKyB0aGlzLmNsYXNzTmFtZSArIFwiIFwiKS5pbmRleE9mKFwiIFwiICsgbmNbaV0gKyBcIiBcIikgPT0gLTEpIHtcblx0ICAgICAgICAgICAgdGhpcy5jbGFzc05hbWUgKz0gXCIgXCIgKyBuY1tpXTtcblx0ICAgICAgICB9XG5cdCAgICB9XG5cdCAgICByZXR1cm4gdGhpcztcblx0fTtcblxuXHQvLyBSZW1vdmVDbGFzc1xuXHRIVE1MRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQ2xhc3MgPSBmdW5jdGlvbihuYW1lKSB7XG5cdCAgaWYgKHRoaXMuaGFzQ2xhc3MobmFtZSkpIHtcblx0ICAgIHZhciByZWcgPSBuZXcgUmVnRXhwKCcoXFxcXHN8XiknK25hbWUrJyhcXFxcc3wkKScpO1xuXHQgICAgdGhpcy5jbGFzc05hbWUgPSB0aGlzLmNsYXNzTmFtZS5yZXBsYWNlKHJlZywnICcpO1xuXHQgIH1cblx0ICByZXR1cm4gdGhpcztcblx0fTtcblxuXG5cdC8qXG5cdCAqIEZ1bmM6IEV4ZWN1dGVPbkxvYWRcblx0ICogRGVzYzogRXhlY3V0ZSBzcGVjaWZpZWQgZnVuY3Rpb24gd2hlbiB0aGUgRE9NIGlzIHJlYWR5LiBIYW5kbGUgXG5cdCAqIEFyZ3M6IGZ1bmN0aW9uTmFtZSAtIEZ1bmN0aW9uIElkZW50aWZpZXIgLSBOYW1lIG9mIHRoZSBmdW5jdGlvbiB0byBleGVjdXRlXG5cdCAqL1xuXHRmdW5jdGlvbiBleGVjdXRlT25Mb2FkKCBmdW5jdGlvbk5hbWUgKSB7XG5cdFx0Ly8gaW4gY2FzZSB0aGUgZG9jdW1lbnQgaXMgYWxyZWFkeSByZW5kZXJlZFxuXHRcdGlmIChkb2MucmVhZHlTdGF0ZSE9J2xvYWRpbmcnKSBmdW5jdGlvbk5hbWUoKTtcblx0XHQvLyBtb2Rlcm4gYnJvd3NlcnNcblx0XHRlbHNlIGlmIChkb2MuYWRkRXZlbnRMaXN0ZW5lcikgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbk5hbWUpO1xuXHRcdC8vIElFIDw9IDhcblx0XHRlbHNlIGRvYy5hdHRhY2hFdmVudCgnb25yZWFkeXN0YXRlY2hhbmdlJywgZnVuY3Rpb24oKXtcblx0XHQgICAgaWYgKGRvYy5yZWFkeVN0YXRlPT0nY29tcGxldGUnKSBmdW5jdGlvbk5hbWUoKTtcblx0XHR9KTtcblx0fVxuXG5cblx0Ly8gRXhwb3NlIHB1YmxpYyBtZXRob2RzXG5cdHJldHVybiB7XG5cdFx0ZXhlY3V0ZU9uTG9hZDogZXhlY3V0ZU9uTG9hZCxcblx0fVxuXG59KSgpOyIsIi8qXG4gKiBNb2R1bGU6IEJZVSBUYWJsZVxuICogRGVzYzogICBIYW5kbGUgdGFibGVzIHRoYXQgYXJlIHdpZGVyIHRoYW4gdGhpZXIgY29udGFpbmVyXG4gKi9cblxudmFyIGJ5dV90YWJsZSA9IChmdW5jdGlvbigpe1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgZG9jID0gZG9jdW1lbnQ7XG5cblxuXHQvLyBFeGVjdXRlIHRoZSBmdW5jdGlvblxuXHRieXVfbWFpbi5leGVjdXRlT25Mb2FkKCB1cGRhdGVUYWJsZXMgKTtcblx0XG5cblx0Lypcblx0ICogRnVuYzogVXBkYXRlVGFibGVzXG5cdCAqIERlc2M6IERldGVjdCBhbmQgaGFuZGxlIHRhYmxlcyB0aGF0IGFyZSB3aWRlciB0aGFuIHRoZWlyIGNvbnRhaW5lci5cblx0ICogXHRcdCBXb3JrcyBvbiB0YWJsZXMgY29udGFpbmVkIHdpdGhpbiBhbiBlbGVtZW50IG9mIGNsYXNzIFwidGFibGUtY29udGFpbmVyXCIuXG5cdCAqIEFyZ3M6IG5vbmVcblx0ICovXG5cdGZ1bmN0aW9uIHVwZGF0ZVRhYmxlcygpIHtcblx0XHR2YXIgY29udGFpbmVycyA9IGRvYy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwidGFibGUtY29udGFpbmVyXCIpO1xuXG5cdFx0Zm9yICh2YXIgaT0wOyBpIDwgY29udGFpbmVycy5sZW5ndGg7IGkrKykge1xuXHRcdCAgICB2YXIgY29udGFpbmVyID0gY29udGFpbmVyc1tpXTtcblx0XHQgICAgdXBkYXRlVGFibGUoIGNvbnRhaW5lciApO1xuXHRcdH1cblx0fVxuXG5cblx0Lypcblx0ICogRnVuYzogVXBkYXRlVGFibGVcblx0ICogRGVzYzogQ2hlY2sgaWYgYSB0YWJsZSBpcyB3aWRlciB0aGFuIGl0cyBjb250YWluZXIsIGFuZCBtYXJrIHNjcm9sbGluZyBwb3NpdGlvbiB3aXRoaW4gaXRcblx0ICogQXJnczogQGNvbnRhaW5lciAtIEhUTUwgRWxlbWVudCAtIEEgY29udGFpbmVyIGVsZW1lbnQgZm9yIGEgdGFibGUgKHByb2JhYmx5IG9mIGNsYXNzIFwidGFibGUtY29udGFpbmVyXCIpXG5cdCAqL1xuXHRmdW5jdGlvbiB1cGRhdGVUYWJsZSggY29udGFpbmVyICkge1xuXHRcdHZhciBjX3dpZHRoID0gY29udGFpbmVyLm9mZnNldFdpZHRoO1xuXHQgICAgdmFyIHRhYmxlID0gY29udGFpbmVyLiBnZXRFbGVtZW50c0J5VGFnTmFtZShcInRhYmxlXCIpWzBdO1xuXHQgICAgdmFyIHRfd2lkdGggPSB0YWJsZS5vZmZzZXRXaWR0aDtcblx0ICAgIHZhciB0YWJsZV93aWRlX2NsYXNzID0gXCJ0YWJsZS13aWRlXCI7XG5cdCAgICB2YXIgc3RhcnRfdmlzaWJsZV9jbGFzcyA9IFwic3RhcnQtdmlzaWJsZVwiO1xuXHQgICAgdmFyIGVuZF92aXNpYmxlX2NsYXNzID0gXCJlbmQtdmlzaWJsZVwiO1xuXG5cdCAgICBpZiAoIGNfd2lkdGggPCB0X3dpZHRoICkge1xuXG5cdCAgICBcdC8vIEFkZCB0YWJsZSB3aWRlIGNsYXNzIGlmIGl0J3Mgbm90IGFscmVhZHkgdGhlcmVcblx0ICAgIFx0aWYgKCAhY29udGFpbmVyLmhhc0NsYXNzKCB0YWJsZV93aWRlX2NsYXNzICkgKSB7IFxuXHRcdCAgICBcdGNvbnRhaW5lci5hZGRDbGFzcyggdGFibGVfd2lkZV9jbGFzcyApO1xuXHRcdCAgICB9XG5cblx0ICAgIFx0Ly8gQ2hlY2sgaWYgdGhlIHN0YXJ0IG9mIHRoZSB0YWJsZSBpcyB2aXNpYmxlIGFuZCBoYW5kbGVcblx0ICAgIFx0aWYgKCB0YWJsZS5zY3JvbGxMZWZ0ID09IDAgKSB7XG5cdCAgICBcdFx0aWYgKCAhY29udGFpbmVyLmhhc0NsYXNzKCBzdGFydF92aXNpYmxlX2NsYXNzICkgKSB7XG5cdFx0ICAgIFx0XHRjb250YWluZXIuYWRkQ2xhc3MoIHN0YXJ0X3Zpc2libGVfY2xhc3MgKTtcblx0ICAgIFx0XHR9XG5cdCAgICBcdH0gZWxzZSB7XG5cdCAgICBcdFx0Y29udGFpbmVyLnJlbW92ZUNsYXNzKCBzdGFydF92aXNpYmxlX2NsYXNzICk7XG5cdCAgICBcdH1cblxuXHQgICAgXHQvLyBDaGVjayBpZiB0aGUgZW5kIG9mIHRoZSB0YWJsZSBpcyB2aXNpYmxlIGFuZCBoYW5kbGVcblx0ICAgIFx0aWYgKCB0X3dpZHRoIC0gdGFibGUuc2Nyb2xsTGVmdCA9PSBjX3dpZHRoICkge1xuXHQgICAgXHRcdGlmICggIWNvbnRhaW5lci5oYXNDbGFzcyggZW5kX3Zpc2libGVfY2xhc3MgKSApIHtcblx0XHQgICAgXHRcdGNvbnRhaW5lci5hZGRDbGFzcyggZW5kX3Zpc2libGVfY2xhc3MgKTtcblx0ICAgIFx0XHR9XG5cdCAgICBcdH0gZWxzZSB7XG5cdCAgICBcdFx0Y29udGFpbmVyLnJlbW92ZUNsYXNzKCBlbmRfdmlzaWJsZV9jbGFzcyApO1xuXHQgICAgXHR9XG5cdCAgICB9IFxuXG5cdCAgICAvLyBUaGUgdGFibGUgaXMgbm90IHRvbyB3aWRlIGZvciBpdHMgY29udGFpbmVyXG5cdCAgICBlbHNlIHtcblx0ICAgIFx0Y29udGFpbmVyLnJlbW92ZUNsYXNzKCB0YWJsZV93aWRlX2NsYXNzICk7XG5cdCAgICB9XG5cdH1cblxufSkoKTsiXX0=
