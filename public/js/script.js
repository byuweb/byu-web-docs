var animate=function(){var a,n,l=(n=(a=[0,6e-5,24e-5,54e-5,97e-5,.00153,.00221,.00303,.00398,.00506,.00629,.00765,.00916,.01081,.0126,.01455,.01664,.01889,.0213,.02386,.02658,.02946,.0325,.03571,.03908,.04262,.04632,.05019,.05423,.05844,.06283,.06738,.0721,.07699,.08206,.0873,.0927,.09827,.104,.1099,.11597,.12219,.12857,.1351,.14179,.14861,.15559,.16271,.16995,.17734,.18484,.19247,.20021,.20805,.216,.22405,.23219,.24041,.24871,.25708,.26552,.27401,.28256,.29114,.29978,.30844,.31712,.32583,.33455,.34328,.352,.36073,.36945,.37815,.38682,.39548,.40411,.41269,.42126,.42977,.43824,.44666,.45502,.46334,.4716,.4798,.48793,.496,.50399,.51192,.51978,.52757,.53528,.54293,.55049,.55796,.56538,.5727,.57996,.58713,.59421,.60122,.60815,.615,.62175,.62844,.63504,.64157,.648,.65437,.66064,.66684,.67296,.679,.68496,.69084,.69665,.70238,.70803,.7136,.71911,.72452,.72988,.73515,.74036,.74549,.75054,.75554,.76045,.7653,.77007,.77479,.77942,.784,.78851,.79295,.79733,.80163,.80589,.81007,.81419,.81825,.82225,.82619,.83007,.83388,.83765,.84135,.845,.84858,.85211,.85559,.85902,.86239,.8657,.86895,.87217,.87532,.87842,.88149,.88448,.88743,.89034,.89319,.896,.89876,.90147,.90414,.90675,.90933,.91185,.91434,.91678,.91917,.92152,.92383,.92609,.92831,.93049,.93264,.93473,.9368,.93881,.94079,.94273,.94463,.9465,.94832,.95011,.95186,.95357,.95525,.95689,.95849,.96006,.9616,.96309,.96455,.96599,.96738,.96874,.97007,.97136,.97263,.97386,.97506,.97623,.97736,.97847,.97954,.98058,.98159,.98258,.98353,.98445,.98535,.98621,.98705,.98786,.98864,.98939,.99011,.99081,.99147,.99212,.99273,.99332,.99388,.99442,.99493,.99541,.99587,.9963,.99671,.99709,.99745,.99779,.9981,.99838,.99865,.99888,.9991,.99929,.99946,.9996,.99972,.99982,.9999,.99996,.99999,1]).length-1,function(t){var e=Math.round(t*n);return a[e]}),u="animating";return{animateHeight:function(e,t){var n,s,i,r,a=Object.assign({start:0,end:100,fadeIn:!0,duration:200,units:"px"},t),o=l;e.style.height=a.start+a.units,e.addClass(u),e.animation=(n={duration:a.duration,delta:o,step:function(t){e.style.height=a.start+(a.end-a.start)*t+a.units},finish:function(){e.removeClass(u),e.style.removeProperty("height"),"function"==typeof a.finish&&a.finish()},interrupt:function(){e.removeClass(u),e.style.removeProperty("height"),"function"==typeof a.interrupt&&a.interrupt()}},s=new Date,i=!1,r=function(){var t=new Date-s,e=t/n.duration;1<e&&(e=1);var a=n.delta(e);n.step(a),i&&n.interrupt?n.interrupt():e<1?window.requestAnimationFrame(r):n.finish&&n.finish()},window.requestAnimationFrame(r),{stop:function(){i=!0}})},getNaturalHeight:function(t,e){var a,n;return e=e||"",(a=function(t,e){var a=document.createElement(e);for(t.appendChild(a);t.firstChild&&t.firstChild!==a;)a.appendChild(t.firstChild);return a}(t,"div")).className=e,n=a.offsetHeight,function(t){for(var e=t.parentNode;t.firstChild;)e.insertBefore(t.firstChild,t);e.removeChild(t)}(a),n}}}(),byu_main=function(){var e=document;function s(t,e){return 0<e.getElementsByClassName(t).length}return HTMLElement.prototype.hasClass=function(t){return this.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))},HTMLElement.prototype.addClass=function(t){for(var e=t.split(","),a=0;a<e.length;a++)-1==(" "+this.className+" ").indexOf(" "+e[a]+" ")&&(this.className+=" "+e[a]);return this},HTMLElement.prototype.removeClass=function(t){if(this.hasClass(t)){var e=new RegExp("(\\s|^)"+t+"(\\s|$)"),a=new RegExp("(\\s|^)"+t);this.className.search(e)&&(this.className=this.className.replace(a,""))}return this},{executeOnLoad:function(t){"loading"!=e.readyState?t():e.addEventListener?e.addEventListener("DOMContentLoaded",t):e.attachEvent("onreadystatechange",function(){"complete"==e.readyState&&t()})},elExists:s,hasChildren:function(t,e){var a,n=!1;return s(t,e)&&(a=e.getElementsByClassName(t),Array.prototype.forEach.call(a,function(t){0<t.children.length&&(n=!0)})),n}}}(),byu_header=function(){"use strict";var e=document,u=300,a="js-enabled",h="aria-expanded",f="menu-open",s="byu-site-navigation",i="byu-action-id-search";byu_main.executeOnLoad(function(){var t=e.getElementsByClassName("byu-header");Array.prototype.forEach.call(t,function(t){var e,n;(e=t).hasNav=byu_main.elExists(s,e),e.hasActions=byu_main.hasChildren(i,e),(e.hasNav||e.hasActions)&&(e.addClass(a),(n=e).getElementsByClassName("byu-menu-button")[0].addEventListener("click",function(t){var e,a;e=t.target,a=n,"false"!=e.getAttribute(h)?function(t,e){function a(){e.removeClass(f)}if(t.setAttribute(h,!1),e.hasNav){var n=e.navEl,s=n.offsetHeight;animate.animateHeight(n,{start:s,end:0,finish:a})}if(e.hasActions){var i=e.actionsEl,r=i.offsetHeight;animate.animateHeight(i,{start:r,end:0,finish:a})}}(e,a):function(t,e){function a(){e.hasClass(f)||e.addClass(f)}if(t.setAttribute(h,!0),e.hasNav){var n=e.navEl,s=n.offsetHeight,i=animate.getNaturalHeight(n);animate.animateHeight(n,{start:s,end:i,duration:u,finish:a})}if(e.hasActions){var r=e.actionsEl,o=r.offsetHeight,l=animate.getNaturalHeight(r,"actionsHeightWrapper");animate.animateHeight(r,{start:o,end:l,duration:u,finish:a})}}(e,a)}),e.navEl=e.getElementsByClassName(s)[0],e.actionsEl=e.getElementsByClassName(i)[0])})})}(),byu_table=function(){"use strict";var n=document;function s(t){var e=t.offsetWidth,a=t.getElementsByTagName("table")[0],n=a.offsetWidth,s="table-wide",i="start-visible",r="end-visible";e<n?(t.hasClass(s)||t.addClass(s),0==a.scrollLeft?t.hasClass(i)||t.addClass(i):t.removeClass(i),n-a.scrollLeft==e?t.hasClass(r)||t.addClass(r):t.removeClass(r)):t.removeClass(s)}byu_main.executeOnLoad(function(){for(var t=n.getElementsByClassName("table-container"),e=0;e<t.length;e++){var a=t[e];s(a)}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
