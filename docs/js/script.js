var animate=function(){var n,a,l=(a=(n=[0,6e-5,24e-5,54e-5,97e-5,.00153,.00221,.00303,.00398,.00506,.00629,.00765,.00916,.01081,.0126,.01455,.01664,.01889,.0213,.02386,.02658,.02946,.0325,.03571,.03908,.04262,.04632,.05019,.05423,.05844,.06283,.06738,.0721,.07699,.08206,.0873,.0927,.09827,.104,.1099,.11597,.12219,.12857,.1351,.14179,.14861,.15559,.16271,.16995,.17734,.18484,.19247,.20021,.20805,.216,.22405,.23219,.24041,.24871,.25708,.26552,.27401,.28256,.29114,.29978,.30844,.31712,.32583,.33455,.34328,.352,.36073,.36945,.37815,.38682,.39548,.40411,.41269,.42126,.42977,.43824,.44666,.45502,.46334,.4716,.4798,.48793,.496,.50399,.51192,.51978,.52757,.53528,.54293,.55049,.55796,.56538,.5727,.57996,.58713,.59421,.60122,.60815,.615,.62175,.62844,.63504,.64157,.648,.65437,.66064,.66684,.67296,.679,.68496,.69084,.69665,.70238,.70803,.7136,.71911,.72452,.72988,.73515,.74036,.74549,.75054,.75554,.76045,.7653,.77007,.77479,.77942,.784,.78851,.79295,.79733,.80163,.80589,.81007,.81419,.81825,.82225,.82619,.83007,.83388,.83765,.84135,.845,.84858,.85211,.85559,.85902,.86239,.8657,.86895,.87217,.87532,.87842,.88149,.88448,.88743,.89034,.89319,.896,.89876,.90147,.90414,.90675,.90933,.91185,.91434,.91678,.91917,.92152,.92383,.92609,.92831,.93049,.93264,.93473,.9368,.93881,.94079,.94273,.94463,.9465,.94832,.95011,.95186,.95357,.95525,.95689,.95849,.96006,.9616,.96309,.96455,.96599,.96738,.96874,.97007,.97136,.97263,.97386,.97506,.97623,.97736,.97847,.97954,.98058,.98159,.98258,.98353,.98445,.98535,.98621,.98705,.98786,.98864,.98939,.99011,.99081,.99147,.99212,.99273,.99332,.99388,.99442,.99493,.99541,.99587,.9963,.99671,.99709,.99745,.99779,.9981,.99838,.99865,.99888,.9991,.99929,.99946,.9996,.99972,.99982,.9999,.99996,.99999,1]).length-1,function(t){var e=Math.round(t*a);return n[e]}),u="animating";return{animateHeight:function(e,t){var a,s,i,r,n=Object.assign({start:0,end:100,fadeIn:!0,duration:200,units:"px"},t),o=l;e.style.height=n.start+n.units,addClass(e,u),e.animation=(a={duration:n.duration,delta:o,step:function(t){e.style.height=n.start+(n.end-n.start)*t+n.units},finish:function(){removeClass(e,u),e.style.removeProperty("height"),"function"==typeof n.finish&&n.finish()},interrupt:function(){removeClass(e,u),e.style.removeProperty("height"),"function"==typeof n.interrupt&&n.interrupt()}},s=new Date,i=!1,r=function(){var t=new Date-s,e=t/a.duration;1<e&&(e=1);var n=a.delta(e);a.step(n),i&&a.interrupt?a.interrupt():e<1?window.requestAnimationFrame(r):a.finish&&a.finish()},window.requestAnimationFrame(r),{stop:function(){i=!0}})},getNaturalHeight:function(t){var e,n;return n=(e=function(t,e){var n=document.createElement(e);for(t.appendChild(n);t.firstChild&&t.firstChild!==n;)n.appendChild(t.firstChild);return n}(t,"div")).offsetHeight,function(t){for(var e=t.parentNode;t.firstChild;)e.insertBefore(t.firstChild,t);e.removeChild(t)}(e),n}}}(),byu_main=function(){var e=document;return HTMLElement.prototype.hasClass=function(t){return this.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))},HTMLElement.prototype.addClass=function(t){for(var e=t.split(","),n=0;n<e.length;n++)-1==(" "+this.className+" ").indexOf(" "+e[n]+" ")&&(this.className+=" "+e[n]);return this},HTMLElement.prototype.removeClass=function(t){if(this.hasClass(t)){var e=new RegExp("(\\s|^)"+t+"(\\s|$)");this.className=this.className.replace(e," ")}return this},{executeOnLoad:function(t){"loading"!=e.readyState?t():e.addEventListener?e.addEventListener("DOMContentLoaded",t):e.attachEvent("onreadystatechange",function(){"complete"==e.readyState&&t()})}}}(),byu_table=function(){"use strict";var a=document;function s(t){var e=t.offsetWidth,n=t.getElementsByTagName("table")[0],a=n.offsetWidth,s="table-wide",i="start-visible",r="end-visible";e<a?(t.hasClass(s)||t.addClass(s),0==n.scrollLeft?t.hasClass(i)||t.addClass(i):t.removeClass(i),a-n.scrollLeft==e?t.hasClass(r)||t.addClass(r):t.removeClass(r)):t.removeClass(s)}byu_main.executeOnLoad(function(){for(var t=a.getElementsByClassName("table-container"),e=0;e<t.length;e++){var n=t[e];s(n)}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
